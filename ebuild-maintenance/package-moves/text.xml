<?xml version="1.0"?>
<guide self="ebuild-maintenance/package-moves/">
<chapter>
<title>Package and Slot Moves</title>
<body>

<p>
This chapter describes the use of package and slot moves. The package update
mechanism is a powerful tool, and needs to be used with caution. In particular,
the following must be noted:
</p>

<ol>
  <li>
    Updates are <e>not one-shot</e> operations and they are not stateful. All
    updates can be reapplied multiple times to the same system, and all old
    updates are applied to fresh Gentoo installations.
  </li>
  <li>
    Once an update entry is created, the old package name (or slot) cannot be
    reused. Attempting to reuse it will cause updates to apply again,
    to the reused name. This also means that updates cannot be undone.
  </li>
  <li>
    Updates can only perform one-to-one moves. They cannot be used to merge
    packages. Attempting to move two or more packages into a single name may
    cause serious problems for users.
  </li>
</ol>

</body>

<section>
<title>Moving or renaming a package</title>
<body>

<p>
Moving or renaming a package (sometimes called a "pkgmove" or just "move")
requires several operations. Firstly, verify that the ebuilds will continue to
work correctly after the move. If the category changes, you must verify all
<c>${CATEGORY}</c> uses. If the package name changes, you must verify
<c>${PN}</c>, <c>${P}</c>, etc. Whenever the old value is necessary,
substitute the variable reference with the verbatim text, so that it won't get
affected by the move. Commit the changes separately before moving
the package.
</p>

<p>
Afterwards, move the package files using <c>git mv</c>. Add the move entry
to <c>profiles/updates/</c> in the following format:
</p>

<pre>
move old-category/old-name new-category/new-name
</pre>

<p>
Following the update entry, find all references to the old package name
and update them. These include:
</p>

<ul>
  <li>
    <uri link="::general-concepts/dependencies">dependencies</uri>,
    <c>optfeature.eclass</c> uses, <c>has_version</c> and <c>best_version</c>
    uses in other ebuilds and eclasses
  </li>
  <li>
    all <c>profiles/</c> tree entries (e.g. <c>profiles/package.mask</c>)
  </li>
  <li>
    <c>restrict</c> entries in package <c>metadata.xml</c> files, as well
    as <c>&lt;pkg/&gt;</c> tags
  </li>
  <li>
    news item <c>Display-If-Installed</c>
  </li>
  <li>
    open bug summaries
  </li>
  <li>
    wiki pages
  </li>
</ul>

<p>
Preferably, combine all those changes into a single commit to ensure atomicity
during the update.
</p>

</body>
</section>

<section>
<title>Changing ebuild's SLOT</title>
<body>

<p>
The process for changing the ebuild's <c>SLOT</c> (a "slotmove") is very similar to the
previous process.  Besides changing the <c>SLOT</c> in the ebuild file, you
also need to create a new entry in <c>profiles/updates/</c> in
the Gentoo repository in the following format:
</p>

<pre>
slotmove app-text/gtkspell 0 2
</pre>

<p>
Make sure that you have fixed all the reverse dependencies and that
you have updated every file in <c>profiles/</c> directory that
happens to contain an entry which may be affected by your change.
</p>

</body>
</section>
</chapter>
</guide>
