<?xml version="1.0" encoding="UTF-8"?>
<guide self="ebuild-writing/functions/src_prepare/eapply/">
<chapter>
<title>Patching with eapply</title>
<body>

<p>
The canonical way of applying patches in ebuilds is to use the package
manager's <c>eapply</c> function.
</p>

<p>
<c>eapply</c> was added in EAPI=6. It differs from the previously available
<c>epatch</c> in several ways:
</p>

<ul>
  <li>
    <c>eapply</c> will not unpack patches for you.
  </li>
  <li>
    The default patch level is <c>-p1</c>. Other patch levels must be specified
    manually or the command will fail.
  </li>
  <li>
    When specifying a directory, at least one file with a name ending in
    <c>.patch</c> or <c>.diff</c> must exist or the command fails. Other files
    are ignored.
  </li>
</ul>

<p>
Note that distributing modified tarballs rather than a vanilla tarball
and patches is <e>highly</e> discouraged.
</p>
</body>

<section>
<title>Basic <c>eapply</c></title>
<body>

<p>
The default <c>src_prepare</c> function will look for a global PATCHES array
to apply a list of patches for you.
</p>

<codesample lang="ebuild">
PATCHES=(
	"${FILESDIR}/${P}-destdir.patch"
	"${FILESDIR}/${P}-parallel_build.patch"
)
</codesample>
</body>
</section>

<section>
<title>Advanced <c>eapply</c></title>
<body>

<p>
This example shows how different patch levels can be applied:
</p>

<codesample lang="ebuild">
src_prepare() {
	eapply -p2 "${WORKDIR}/${P}-suse-update.patch"
	eapply -p0 "${FILESDIR}/${PV}-no-TIOCGDEV.patch"
	eapply "${FILESDIR}/${PV}-gcc-6.patch"
	eapply_user
}
</codesample>
</body>
</section>
</chapter>
</guide>
