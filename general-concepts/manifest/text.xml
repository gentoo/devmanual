<?xml version="1.0"?>
<guide self="general-concepts/manifest/">
<chapter>
<title>Manifest</title>

<body>

<section>
<title>Generating the Manifest</title>
<body>
<p>
In the tree, every package has a <c>Manifest</c> file. This file lives in the same
directory as the ebuilds for the package. The <c>Manifest</c> file contains digests
(currently RMD160, SHA1, SHA256, SHA512 and WHIRLPOOL) and file size data for every
file in the directory and any subdirectories. This is used to verify integrity.
The <c>Manifest</c> may also be digitally signed.
</p>

<p>
To generate the <c>Manifest</c>, use <c>ebuild foo.ebuild manifest</c>. When
committing, the <c>Manifest</c> file must be regenerated to handle any CVS keyword
expansion changes <d/> <c>repoman</c> will do this automatically.
</p>
</body>
</section>

<section>
<title>Signing the Manifest using GPG key (GLEP 63)</title>
<body>
<p>
Requirements:
</p>

<ul>
  <li>app-crypt/gkeys</li>
</ul>

<p>
Key Setup:
</p>

<ul>
  <li>
    <uri link="https://wiki.gentoo.org/wiki/Project:Gentoo-keys/Generating_GLEP_63_based_OpenPGP_keys">Generating a GLEP 63 based OpenPGP key</uri> with app-crypt/gkeys. This guarantees that the generated key applies to <uri link="https://wiki.gentoo.org/wiki/GLEP:63">GLEP 63</uri> specification.
  </li>
  <li>
    <uri link="https://wiki.gentoo.org/wiki/Project:Gentoo-keys/Generating_GLEP_63_based_OpenPGP_keys#Publishing_the_public_key">Publish</uri> the public key to a keyserver.
  </li>
</ul>

<p>
Portage Configuration:
</p>

<ul>
  <li>
    Set <path>PORTAGE_GPG_DIR</path> to your <path>~/.gnupg/</path> directory
    (or the directory where the keyring with your new key is).
  </li>
  <li>Set <path>PORTAGE_GPG_KEY</path> to the key id of your new key.</li>
  <li>Set FEATURES="sign".</li>
</ul>

<p>
Now you should be able to sign your Manifests on repoman commit. Repoman will
ask you for your passphrase before committing the Manifest. This step is
<e>after</e> it has committed the other files. At the moment repoman doesn't
check if the Manifest is already signed, so others are able to "unsign" your
package later. This will change before signing is made mandatory.
</p>
</body>
</section>

</body>
</chapter>
</guide>
