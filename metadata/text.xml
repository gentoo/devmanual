<?xml version="1.0"?>
<guide self="metadata/">
<chapter>
<title>Repository metadata</title>

<body>
<p>
This section describes various metadata files used to control the repository.
For historical reasons, those files are scattered between the <c>metadata/</c>
and <c>profiles/</c> directories.
</p>
</body>

<section>
<title>profiles/eapi</title>

<body>
<p>
This file specifies the EAPI version of the repository metadata, in particular
the <c>profiles/</c> directory. If you are using newer EAPI extensions to some
of the files listed below, this file must specify the appropriate EAPI used.
</p>

<p>
If the file is not present, EAPI 0 is assumed.
</p>

</body>
</section>

<section>
<title>profiles/repo_name</title>

<body>
<p>
This file specifies the name of the repository. It must be present in every
repository, and it must be unique within the system. Furthermore, if you plan
to publish your repository, you should aim for a name unique within
the complete <uri link="https://repos.gentoo.org/">Gentoo repository list</uri>.
</p>

<p>
For example, the main Gentoo repository is named <c>gentoo</c>.
</p>

</body>
</section>

<section>
<title>metadata/layout.conf</title>

<body>
<p>
This file specifies additional parameters of the repository layout. It is
commonly present in Gentoo repositories to request inheritance from the Gentoo
repository:
</p>

<codesample>
# inherit eclasses, etc. from Gentoo
masters = gentoo
</codesample>

<p>
The file can also be used to control Manifest format, cache format, allowed
EAPIs and many more. The detailed option list can be found in <c>portage(5)</c>
manpage.
</p>

</body>
</section>

<section>
<title>profiles/categories</title>

<body>
<p>
The <c>profiles/categories</c> file contains an asciibetically sorted list of all
the valid categories in the Gentoo repository. When adding a new category, remember
to update and commit this file <e>before</e> making any related commits.
</p>

<p>
The <c>categories</c> file is a straight list. For descriptions, see <uri
link="::ebuild-writing/misc-files/metadata/#Category Metadata"/>.
</p>
</body>
</section>

<section>
<title>profiles/info_*</title>
<body>

<p>
The <c>profiles/info_pkgs</c> file controls the packages whose versions are listed
when <c>emerge --info</c> is run. The <c>profiles/info_vars</c> file controls the
displayed environment variables. Do not add to these files without discussion on
the <c>gentoo-dev</c> mailing list.
</p>

</body>
</section>

<section>
<title>profiles/updates/</title>
<body>

<p>
The files in the <c>updates/</c> directory are organized by quarters of years
and are named <c>&lt;quarter&gt;Q-&lt;year&gt;</c>, e.g. <c>1Q-2010</c>
(quarter count is one-based).
</p>

<p>
These files are simple text files, where each line contains one of the following
commands. Note that these only cause the package manager to adjust its metadata,
the actual changes to the package have to be done manually.
</p>

<table>
  <tr>
    <th>
      Command
    </th>
    <th>
      Description
    </th>
  </tr>
  <tr>
    <ti>
      <c>move oldcat/oldpkg newcat/newpkg</c>
    </ti>
    <ti>
      Indicates the packages has been renamed, moved to another category, or
      both.
    </ti>
  </tr>
  <tr>
    <ti>
      <c>slotmove spec oldslot newslot</c>
    </ti>
    <ti>
      Indicates that the package matching dependency specification <c>spec</c>
      has changed slots.
    </ti>
  </tr>
</table>

</body>
</section>

<section>
<title>profiles/use.desc and profiles/use.local.desc</title>
<body>

<p>
The <c>use.desc</c> file contains a list of all global non-expanded <c>USE</c> flags,
together with a short description. This file should not be modified without
discussion on the <c>gentoo-dev</c> list.
</p>

<p>
The <c>metadata.xml</c> file on each ebuild category contains a list of the local
<c>USE</c> flags, together with short description for the package in the said category.
More information about the <c>metadata.xml</c> file can be found
<uri link="ebuild-writing/misc-files/metadata/index.html">here.</uri>
</p>

<note>
<c>use.local.desc</c> used to be the default location for all the local useflags.
However, this file is now an autogenerated aggregation of all the <c>metadata.xml</c> files
so you must never edit it directly.
</note>
<p>
Having a small number of packages using identically named local <c>USE</c> flags is
allowed. If the number starts to grow substantially, it may be worth proposing
that the flag becomes a global <d /> see
<uri link="::general-concepts/use-flags#Local and Global USE Flags"/>.
</p>

<p>
All non-expand flags must be listed in exactly one of these files.
</p>

<p>Expanded flags are listed in <c>desc/${prefix}.desc</c>, where <c>${prefix}</c> is the
name of the environment variable to be expanded in lowercase. Instead of listing the
complete flag only the flag's suffix, i.e. the environment variable's possible values are
listed.</p>

</body>
</section>

</chapter>
</guide>
